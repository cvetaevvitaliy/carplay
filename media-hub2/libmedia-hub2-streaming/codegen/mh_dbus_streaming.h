/*
 * Generated by gdbus-codegen 2.41.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MH_DBUS_STREAMING_H__
#define __MH_DBUS_STREAMING_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.neusoft.mediahub2.streaming */

#define TYPE_MEDIAHUB2_STREAMING (mediahub2_streaming_get_type ())
#define MEDIAHUB2_STREAMING(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_STREAMING, Mediahub2Streaming))
#define IS_MEDIAHUB2_STREAMING(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_STREAMING))
#define MEDIAHUB2_STREAMING_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_MEDIAHUB2_STREAMING, Mediahub2StreamingIface))

struct _Mediahub2Streaming;
typedef struct _Mediahub2Streaming Mediahub2Streaming;
typedef struct _Mediahub2StreamingIface Mediahub2StreamingIface;

struct _Mediahub2StreamingIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_add_media_mapping) (
    Mediahub2Streaming *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_uri,
    guint arg_shared);

  gboolean (*handle_remove_media_mapping) (
    Mediahub2Streaming *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_uri);

};

GType mediahub2_streaming_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *mediahub2_streaming_interface_info (void);
guint mediahub2_streaming_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void mediahub2_streaming_complete_add_media_mapping (
    Mediahub2Streaming *object,
    GDBusMethodInvocation *invocation,
    gboolean result);

void mediahub2_streaming_complete_remove_media_mapping (
    Mediahub2Streaming *object,
    GDBusMethodInvocation *invocation,
    gboolean result);



/* D-Bus method calls: */
void mediahub2_streaming_call_add_media_mapping (
    Mediahub2Streaming *proxy,
    const gchar *arg_uri,
    guint arg_shared,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_streaming_call_add_media_mapping_finish (
    Mediahub2Streaming *proxy,
    gboolean *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_streaming_call_add_media_mapping_sync (
    Mediahub2Streaming *proxy,
    const gchar *arg_uri,
    guint arg_shared,
    gboolean *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_streaming_call_remove_media_mapping (
    Mediahub2Streaming *proxy,
    const gchar *arg_uri,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_streaming_call_remove_media_mapping_finish (
    Mediahub2Streaming *proxy,
    gboolean *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_streaming_call_remove_media_mapping_sync (
    Mediahub2Streaming *proxy,
    const gchar *arg_uri,
    gboolean *out_result,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_MEDIAHUB2_STREAMING_PROXY (mediahub2_streaming_proxy_get_type ())
#define MEDIAHUB2_STREAMING_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_STREAMING_PROXY, Mediahub2StreamingProxy))
#define MEDIAHUB2_STREAMING_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_MEDIAHUB2_STREAMING_PROXY, Mediahub2StreamingProxyClass))
#define MEDIAHUB2_STREAMING_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_MEDIAHUB2_STREAMING_PROXY, Mediahub2StreamingProxyClass))
#define IS_MEDIAHUB2_STREAMING_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_STREAMING_PROXY))
#define IS_MEDIAHUB2_STREAMING_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_MEDIAHUB2_STREAMING_PROXY))

typedef struct _Mediahub2StreamingProxy Mediahub2StreamingProxy;
typedef struct _Mediahub2StreamingProxyClass Mediahub2StreamingProxyClass;
typedef struct _Mediahub2StreamingProxyPrivate Mediahub2StreamingProxyPrivate;

struct _Mediahub2StreamingProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  Mediahub2StreamingProxyPrivate *priv;
};

struct _Mediahub2StreamingProxyClass
{
  GDBusProxyClass parent_class;
};

GType mediahub2_streaming_proxy_get_type (void) G_GNUC_CONST;

void mediahub2_streaming_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mediahub2Streaming *mediahub2_streaming_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Mediahub2Streaming *mediahub2_streaming_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void mediahub2_streaming_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mediahub2Streaming *mediahub2_streaming_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Mediahub2Streaming *mediahub2_streaming_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_MEDIAHUB2_STREAMING_SKELETON (mediahub2_streaming_skeleton_get_type ())
#define MEDIAHUB2_STREAMING_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_STREAMING_SKELETON, Mediahub2StreamingSkeleton))
#define MEDIAHUB2_STREAMING_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_MEDIAHUB2_STREAMING_SKELETON, Mediahub2StreamingSkeletonClass))
#define MEDIAHUB2_STREAMING_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_MEDIAHUB2_STREAMING_SKELETON, Mediahub2StreamingSkeletonClass))
#define IS_MEDIAHUB2_STREAMING_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_STREAMING_SKELETON))
#define IS_MEDIAHUB2_STREAMING_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_MEDIAHUB2_STREAMING_SKELETON))

typedef struct _Mediahub2StreamingSkeleton Mediahub2StreamingSkeleton;
typedef struct _Mediahub2StreamingSkeletonClass Mediahub2StreamingSkeletonClass;
typedef struct _Mediahub2StreamingSkeletonPrivate Mediahub2StreamingSkeletonPrivate;

struct _Mediahub2StreamingSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  Mediahub2StreamingSkeletonPrivate *priv;
};

struct _Mediahub2StreamingSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType mediahub2_streaming_skeleton_get_type (void) G_GNUC_CONST;

Mediahub2Streaming *mediahub2_streaming_skeleton_new (void);


G_END_DECLS

#endif /* __MH_DBUS_STREAMING_H__ */
