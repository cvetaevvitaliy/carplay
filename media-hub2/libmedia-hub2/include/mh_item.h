/*
 * Generated by plugin-codegen.
 */
#ifndef __MH_ITEM_H__
#define __MH_ITEM_H__

#include <gio/gio.h>
#include <glib-object.h>
#include <mh_api.h>

/*
 * Type Macros
 */

#define MH_TYPE_ITEM \
	(mh_item_get_type())
#define MH_ITEM(obj) \
	(G_TYPE_CHECK_INSTANCE_CAST((obj), MH_TYPE_ITEM, MHItem))
#define MH_IS_ITEM(obj) \
	(G_TYPE_CHECK_INSTANCE_TYPE((obj), MH_TYPE_ITEM))
#define MH_ITEM_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_CAST((klass), MH_TYPE_ITEM, MHItemClass))
#define MH_IS_ITEM_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_TYPE((klass), MH_TYPE_ITEM))
#define MH_ITEM_GET_CLASS(obj) \
	(G_TYPE_INSTANCE_GET_CLASS((obj), MH_TYPE_ITEM, MHItemClass))

#define ITEM_TO_DATA( item ) \
	MHItemData * _data	=	g_slice_new0( MHItemData ); \
\
	_data->uri	=	g_strdup( item->uri ); \
	_data->type	=	item->type; \
	_data->name	=	g_strdup( item->name ); \
	_data->size	=	item->size; \
	_data->uniqueId	=	item->uniqueId; \
	_data->valid	=	item->valid; \
	_data->tagId	=	item->tagId;\
	_data->favorite	=	item->favorite;

typedef struct _MHItemClass	MHItemClass;

struct _MHItemClass
{
	GObjectClass parent_class;

	/* Class Ios */

	/* Class Methods */
	char * (* get_uri )(MHItem * );
	MHFolder * (* get_parent)(MHItem * );
	/* Class Properties */
};

struct _MHItem
{
	GObject parent;

	/* Instance Members */
	gint64 uniqueId;
	gint64 mediaId;

	gchar * name;
	guint64 size;
	MHItemType type;
	MHItemValid valid;

	MHDev * dev;
	GNode * node;
	gchar * uri;

	gchar * collateKey;
	gint64 tagId;
	bool favorite;
	
};

/* used by MH_TYPE_ITEM */
GType mh_item_get_type( void );

/* Ios List */

#endif /* __MH_ITEM_H__ */
