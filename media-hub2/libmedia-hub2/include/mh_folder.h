/*
 * Generated by plugin-codegen.
 */
#ifndef __MH_FOLDER_H__
#define __MH_FOLDER_H__

#include <gio/gio.h>
#include <mh_item.h>

/*
 * Type Macros
 */

#define MH_TYPE_FOLDER \
	(mh_folder_get_type())
#define MH_FOLDER(obj) \
	(G_TYPE_CHECK_INSTANCE_CAST((obj), MH_TYPE_FOLDER, MHFolder))
#define MH_IS_FOLDER(obj) \
	(G_TYPE_CHECK_INSTANCE_TYPE((obj), MH_TYPE_FOLDER))
#define MH_FOLDER_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_CAST((klass), MH_TYPE_FOLDER, MHFolderClass))
#define MH_IS_FOLDER_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_TYPE((klass), MH_TYPE_FOLDER))
#define MH_FOLDER_GET_CLASS(obj) \
	(G_TYPE_INSTANCE_GET_CLASS((obj), MH_TYPE_FOLDER, MHFolderClass))

typedef struct _MHFolderClass	MHFolderClass;

struct _MHFolderClass
{
	MHItemClass parent_class;

	/* Class Ios */

	/* Class Methods */
	MHItem ** (* get_children)( MHFolder *, MHFilter *, MHFolderPosition, int32_t *, MHItemOrderType );
	MHPlaylist * (* create_playlist)( MHFolder *, MHFilter *, bool );
	MHFolder * (* dup)( MHFolder *);
	void (* add_type_count )( MHFolder * , MHItemType );
	void (* del_type_count )( MHFolder * , MHItemType );
	void (* seek )( MHFolder *, MHFilter *, int32_t, MHItemOrderType );
	/* Class Properties */
};

struct _MHFolder
{
	MHItem parent;

	/* Instance Members */
	gboolean scanned;
	GNode * curChild;
	GHashTable * hash;
	uint32_t music_count;
	uint32_t movie_count;
	uint32_t picture_count;
	uint32_t playlist_count;
	MHItemOrderType order;
};
						
/* used by MH_TYPE_FOLDER */
GType mh_folder_get_type( void );

/* Ios List */
MHFolder * mh_folder_dup( MHFolder * folder);
void mh_folder_add_type_count(MHFolder * folder, MHItemType type);
void mh_folder_del_type_count(MHFolder * folder, MHItemType type);

#endif /* __MH_FOLDER_H__ */
