/*
 * Generated by plugin-codegen.
 */
#ifndef __MH_CORE_H__
#define __MH_CORE_H__

#include <gio/gio.h>
#include <mh_api.h>
#include <mh_io.h>

/*
 * Type Macros
 */

#define MH_TYPE_CORE \
	(mh_core_get_type())
#define MH_CORE(obj) \
	(G_TYPE_CHECK_INSTANCE_CAST((obj), MH_TYPE_CORE, MHCore))
#define MH_IS_CORE(obj) \
	(G_TYPE_CHECK_INSTANCE_TYPE((obj), MH_TYPE_CORE))
#define MH_CORE_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_CAST((klass), MH_TYPE_CORE, MHCoreClass))
#define MH_IS_CORE_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_TYPE((klass), MH_TYPE_CORE))
#define MH_CORE_GET_CLASS(obj) \
	(G_TYPE_INSTANCE_GET_CLASS((obj), MH_TYPE_CORE, MHCoreClass))

typedef struct _MHCoreClass	MHCoreClass;

struct _MHCoreClass
{
	MHIoClass parent_class;

	/* Class Ios */

	/* Class Methods */

	/* Class Properties */
};

struct _MHCore
{
	MHIo parent;

	/* Instance Members */

};

typedef gboolean * ( * plugin_instance )();
typedef gboolean * ( * plugin_dev_find )( MHDevParam * param );
/* used by MH_TYPE_CORE */
GType mh_core_get_type( void );

/* Ios List */
MHCore * mh_core_instance();
void mh_core_detach_dev( MHDev * dev );
MHDev * mh_core_find_dev_custom( const void * data, GCompareFunc func );
void mh_core_attach_dev( MHDev * dev );
#endif /* __MH_CORE_H__ */
