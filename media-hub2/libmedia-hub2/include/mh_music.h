/*
 * Generated by plugin-codegen.
 */
#ifndef __MH_MUSIC_H__
#define __MH_MUSIC_H__

#include <gio/gio.h>
#include <mh_item.h>

/*
 * Type Macros
 */

#define MH_TYPE_MUSIC \
	(mh_music_get_type())
#define MH_MUSIC(obj) \
	(G_TYPE_CHECK_INSTANCE_CAST((obj), MH_TYPE_MUSIC, MHMusic))
#define MH_IS_MUSIC(obj) \
	(G_TYPE_CHECK_INSTANCE_TYPE((obj), MH_TYPE_MUSIC))
#define MH_MUSIC_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_CAST((klass), MH_TYPE_MUSIC, MHMusicClass))
#define MH_IS_MUSIC_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_TYPE((klass), MH_TYPE_MUSIC))
#define MH_MUSIC_GET_CLASS(obj) \
	(G_TYPE_INSTANCE_GET_CLASS((obj), MH_TYPE_MUSIC, MHMusicClass))

typedef struct _MHMusic		MHMusic;
typedef struct _MHMusicClass	MHMusicClass;

struct _MHMusicClass
{
	MHItemClass parent_class;

	/* Class Ios */

	/* Class Methods */

	/* Class Properties */
};

struct _MHMusic
{
	MHItem parent;

	/* Instance Members */
	gchar * title;
	guint rating;
	guint duration;
	gchar * album_title;
	guint track;
	guint track_count;
	guint disc;
	guint disc_count;
	gchar * artist;
	gchar * album_artist;
	gchar * genre;
	gchar * composer;
	guint year;
	bool album_compliation;
	MHMediaType mediaType;
	gint64 last_chgtime;	//compare by lastchangtime 
};

/* used by MH_TYPE_MUSIC */
GType mh_music_get_type( void );

/* Ios List */



#endif /* __MH_MUSIC_H__ */
