/*
 * Generated by plugin-codegen.
 */
#ifndef __MH_DEV_IAP2_H__
#define __MH_DEV_IAP2_H__

#include <gio/gio.h>
#include <mh_dev.h>
#include <mh_pb.h>
#include <iAP2LinkRunLoop.h>
#include "iAP2FileTransfer.h"
#include <mh_api.h>

/*
 * Type Macros
 */

#define MH_TYPE_DEV_IAP2 \
	(mh_dev_iap2_get_type())
#define MH_DEV_IAP2(obj) \
	(G_TYPE_CHECK_INSTANCE_CAST((obj), MH_TYPE_DEV_IAP2, MHDevIap2))
#define MH_IS_DEV_IAP2(obj) \
	(G_TYPE_CHECK_INSTANCE_TYPE((obj), MH_TYPE_DEV_IAP2))
#define MH_DEV_IAP2_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_CAST((klass), MH_TYPE_DEV_IAP2, MHDevIap2Class))
#define MH_IS_DEV_IAP2_CLASS(klass) \
	(G_TYPE_CHECK_CLASS_TYPE((klass), MH_TYPE_DEV_IAP2))
#define MH_DEV_IAP2_GET_CLASS(obj) \
	(G_TYPE_INSTANCE_GET_CLASS((obj), MH_TYPE_DEV_IAP2, MHDevIap2Class))

typedef struct _MHDevIap2		MHDevIap2;
typedef struct _MHDevIap2Class	MHDevIap2Class;

struct _MHDevIap2Class
{
	MHDevClass parent_class;

	/* Class Ios */

	/* Class Methods */

	/* Class Properties */
};

typedef enum _iAP2DataScreenMode_
{
	IAP2_DATA_FRIST_NOTIFY,
	IAP2_DATA_VALID, 	
	IAP2_DATA_INVALID
} iAP2DataScreenMode;	

//typedef enum _iAP2DeviceMode
//{
//	INVALID_MODE,
//	IAP2_MODE,
//	CARPLAY_MODE, 	
//	CARLIFE_MODE
//} iAP2DeviceMode;	
struct _MHDevIap2
{
	MHDev parent;

	gint (* read)( guint8 *, gint len, int _hidFd, MHDev * dev );
	gint (* write)( guint8 *, gint len, int _hidFd, MHDev * dev );

	gint (* eaNative_write)( MHDev * ,const uint8_t *, gint len);

	/* Instance Members */
	gchar * mediaLibraryId;
	gchar * mediaLibraryName;
	gchar * libraryRevision;
	GSList * playListHeaders;
	gint libraryIdLen;
	gboolean hostMode;
	gboolean syncComplete;

	guint8 * currentData;
	gint currentLen;
	
	gchar * radioLibraryRevision;
	gchar * radioLibraryId;
	gchar * radioLibraryName;
	gint radioLibraryIdLen;
	gint radioLibraryFlag;
	gint stopUpdateFlag;

	GThread * hidTask;
	int _iap2hidFd;
	iAP2LinkRunLoop_t * plinkRunLoop;
	iAP2FileTransfer_t * xfers[0x100];

	MHPb * pb;
	MHPbStatusEvent oldStatus;
	MHPbStatusEvent curStatus;
	MHPbStatusEvent curphoneStatus;
	gboolean elapsedTimeAvailable;
	guint32 currentQueueIndex;
	gboolean mediaInfoFlag;
	gboolean deviceNameFlag;
	char * device_name;
	gboolean repeatFlag;
	gboolean shuffleFlag;
	gboolean curStatusFlag;
	uint32_t	sample_rate;
	uint32_t	sample_rate_num;

	iAP2DataScreenMode	screenMode;

	gboolean indentifyFlag;
	char * app_name;
	gboolean appNameFlag;
	uint32_t	speed;
	gboolean speedFlag;

	MiscIapDeviceMode mode;
	MHDeviceType transportType;
	char * macAddress;


};

#if 1  //double iap2
typedef struct
{
	MHDevIap2 * piAP2Object;
	iAP2LinkRunLoop_t * plinkRunLoop;
}iAP2GlobalInfo;
#endif
/* used by MH_TYPE_DEV_IAP2 */
GType mh_dev_iap2_get_type( void );

/* Ios List */

#define IAP2_CONTROL_SESSION_ID	0x0A
#define IAP2_FILE_SESSION_ID	0x0B
#define IAP2_EA_SESSION_ID		0x0C

iAP2Link_t * iAP2InitGetLink ();
void send_packet ( struct iAP2Link_st *link, iAP2Packet_t *packet );
BOOL data_ready ( struct iAP2Link_st *link, uint8_t *data, uint32_t dataLen, uint8_t session );
void is_connected ( struct iAP2Link_st * link, BOOL bConnected );
void send_detect ( struct iAP2Link_st *link, BOOL bBad );
MHPlaylist * restore_playlist_from_data( MHDev * self, guint8 * data, int length );
void iAP2SetResample(MHDevIap2 * _iAP2Object);
void iAP2StartMediaLibraryUpdateTimeout(MHDevIap2 * _iAP2Object);
void iAP2StopMediaLibraryUpdateTimeout(MHDevIap2 * _iAP2Object);
#endif /* __MH_DEV_IAP2_H__ */
