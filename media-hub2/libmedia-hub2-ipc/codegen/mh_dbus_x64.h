/*
 * Generated by gdbus-codegen 2.41.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MH_DBUS_X64_H__
#define __MH_DBUS_X64_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.neusoft.mediahub2.dbus */

#define TYPE_MEDIAHUB2_DBUS (mediahub2_dbus_get_type ())
#define MEDIAHUB2_DBUS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_DBUS, Mediahub2Dbus))
#define IS_MEDIAHUB2_DBUS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_DBUS))
#define MEDIAHUB2_DBUS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_MEDIAHUB2_DBUS, Mediahub2DbusIface))

struct _Mediahub2Dbus;
typedef struct _Mediahub2Dbus Mediahub2Dbus;
typedef struct _Mediahub2DbusIface Mediahub2DbusIface;

struct _Mediahub2DbusIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_carlife_register_bt_hfp_request) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_col_add_filter) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    GVariant *arg_filter);

  gboolean (*handle_col_create) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_col_create_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gboolean arg_fuzzy);

  gboolean (*handle_col_filter_clear) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col);

  gboolean (*handle_col_retrieve_album) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy);

  gboolean (*handle_col_retrieve_data) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy);

  gboolean (*handle_col_set_favorite) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type,
    guint arg_favorite);

  gboolean (*handle_col_set_order_type) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type);

  gboolean (*handle_col_set_retrieve_key) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_col,
    guint arg_type);

  gboolean (*handle_core_find_dev) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_devParam);

  gboolean (*handle_core_register_devices_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_core_register_events_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_core_start) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_core_stop) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_dev_add_file) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint64 arg_dest,
    guint64 arg_source);

  gboolean (*handle_dev_attach_pb) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint64 arg_pb);

  gboolean (*handle_dev_create_col) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_create_empty_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_delete_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    gint64 arg_playlist_id);

  gboolean (*handle_dev_detete_file) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint64 arg_item);

  gboolean (*handle_dev_get_item_by_uri) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    const gchar *arg_uri);

  gboolean (*handle_dev_get_playlist_info) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_get_radiolist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    gint arg_count);

  gboolean (*handle_dev_register_detach_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_register_events_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_register_module_status) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_register_status_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_request_app_launch) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    const gchar *arg_app_bundle_id);

  gboolean (*handle_dev_restore_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    gint64 arg_playlist_id);

  gboolean (*handle_dev_save_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist);

  gboolean (*handle_dev_scan_abort) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_search_name) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint arg_type,
    const gchar *arg_string,
    gint arg_count);

  gboolean (*handle_dev_send_vehicle_status) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_remainingRange,
    gint arg_outsideTempreture,
    gint arg_rangeWarning);

  gboolean (*handle_dev_send_wifi_conf_info) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    GVariant *arg_ssid,
    GVariant *arg_pass,
    guint arg_securityType,
    guint arg_channel);

  gboolean (*handle_dev_start) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev);

  gboolean (*handle_dev_start_scan) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_type);

  gboolean (*handle_dev_update_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist,
    gint64 arg_playlist_id);

  gboolean (*handle_dev_write_bt_data) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    GVariant *arg_data);

  gboolean (*handle_dev_write_ea_data) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    GVariant *arg_data);

  gboolean (*handle_dev_write_location_data) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    const gchar *arg_data);

  gboolean (*handle_file_get_tag) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_file_path);

  gboolean (*handle_filter_create) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_filter_str);

  gboolean (*handle_folder_create_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint64 arg_filter,
    gboolean arg_recursive);

  gboolean (*handle_folder_get_children) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint64 arg_filter,
    guint arg_position,
    gint arg_count,
    guint arg_order);

  gboolean (*handle_folder_seek) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_folder,
    guint64 arg_filter,
    guint arg_pos,
    guint arg_order);

  gboolean (*handle_item_foreach) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_items);

  gboolean (*handle_item_foreach_fd) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_items,
    GVariant *arg_fd);

  gboolean (*handle_item_foreach_shm) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_items);

  gboolean (*handle_misc_carplay_init_modes) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_data);

  gboolean (*handle_misc_db_delete_by_serial_number) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_serialNum);

  gboolean (*handle_misc_db_restore) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_misc_reset) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_misc_save_pb) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_misc_set_bluetoothids) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_ids);

  gboolean (*handle_misc_set_filter) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_type_filter);

  gboolean (*handle_misc_set_iap_device_mode) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint arg_mode);

  gboolean (*handle_misc_set_righthand) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint arg_status);

  gboolean (*handle_obj_get_properties) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    const gchar *const *arg_properties);

  gboolean (*handle_obj_get_properties_type) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    const gchar *const *arg_properties);

  gboolean (*handle_obj_get_property_type) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    const gchar *arg_property);

  gboolean (*handle_obj_ref) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_obj_set_properties) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    GVariant *arg_properties);

  gboolean (*handle_obj_signal_connect) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    const gchar *arg_signal);

  gboolean (*handle_obj_unref) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_audiobook_playback_speed) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_speed);

  gboolean (*handle_pb_backward) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_backward_done) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_close) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_create) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_pb_forward) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_forward_done) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_get_subtitle_info) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_pb);

  gboolean (*handle_pb_get_track_info) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_pb);

  gboolean (*handle_pb_next) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_pause) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_pixel_aspect_ratio) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_pixel_n,
    guint arg_pixel_d);

  gboolean (*handle_pb_play) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_play_by_list) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint64 arg_playlist,
    guint arg_index);

  gboolean (*handle_pb_play_pause) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_play_radio_by_index) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint64 arg_obj,
    guint arg_index);

  gboolean (*handle_pb_playlist_change) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_pb,
    guint64 arg_playlist);

  gboolean (*handle_pb_previous) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_pb_register_events_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_self);

  gboolean (*handle_pb_register_status_listener) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_self);

  gboolean (*handle_pb_resize) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_offsetx,
    guint arg_offsety,
    guint arg_width,
    guint arg_height);

  gboolean (*handle_pb_seek) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_second);

  gboolean (*handle_pb_set_pipeline_status) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj,
    guint arg_status);

  gboolean (*handle_pb_stop) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_obj);

  gboolean (*handle_playlist_append) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    GVariant *arg_items,
    guint arg_count);

  gboolean (*handle_playlist_append_playlist) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist_src,
    guint64 arg_playlist_des);

  gboolean (*handle_playlist_foreach) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count);

  gboolean (*handle_playlist_foreach_shm) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count);

  gboolean (*handle_playlist_insert) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    guint arg_index,
    GVariant *arg_items,
    guint arg_count);

  gboolean (*handle_playlist_remove) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    guint arg_index,
    guint arg_count);

  gboolean (*handle_playlist_sort) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_playlist,
    guint arg_sort_type,
    guint arg_order_type);

  gboolean (*handle_send_signal_touch) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 arg_dev,
    guint arg_press_type,
    guint arg_x,
    guint arg_y);

  gboolean (*handle_shm_unlink) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_name);

  gboolean (*handle_test_string) (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_input);

  void (*audio_info) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status,
    guint arg_type,
    guint arg_rate,
    guint arg_channel);

  void (*bt_data) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    GVariant *arg_data);

  void (*carlife_bt_hfp_request) (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_request_type,
    const gchar *arg_phone_num,
    gint arg_dtmfcode);

  void (*core_devices) (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_event);

  void (*core_events) (
    Mediahub2Dbus *object,
    guint arg_event,
    const gchar *arg_type);

  void (*dev_detach) (
    Mediahub2Dbus *object,
    guint64 arg_dev);

  void (*dev_event) (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_scan_type,
    guint arg_item_type,
    guint64 arg_data,
    guint arg_percent);

  void (*dev_module_status) (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_cnt,
    GVariant *arg_module_status_list);

  void (*dev_status) (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_status);

  void (*disable_bluetooth) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    const gchar *arg_device_id);

  void (*duck_audio) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    gdouble arg_durationms,
    gdouble arg_volume);

  void (*ea_session_data) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    GVariant *arg_data);

  void (*ea_session_send_pb) (
    Mediahub2Dbus *object,
    guint arg_obj,
    guint arg_pb);

  void (*ea_session_start) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_protocol_id,
    guint arg_session_id,
    guint arg_pb);

  void (*ea_session_stop) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_session_id);

  void (*modes_changed) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    const gchar *arg_screen,
    const gchar *arg_main_audio,
    const gchar *arg_speech_entity,
    const gchar *arg_speech_mode,
    const gchar *arg_phone,
    const gchar *arg_turns);

  void (*pb_events) (
    Mediahub2Dbus *object,
    guint64 arg_pb,
    guint arg_type,
    GVariant *arg_data);

  void (*req_accessory_wifi_conf_info) (
    Mediahub2Dbus *object,
    guint64 arg_obj);

  void (*request_ui) (
    Mediahub2Dbus *object,
    guint64 arg_obj);

  void (*start_location_info) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_location_id);

  void (*start_vehicle_status_updates) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status_id);

  void (*status_update) (
    Mediahub2Dbus *object,
    guint64 arg_pb,
    guint arg_type);

  void (*stop_location_info) (
    Mediahub2Dbus *object,
    guint64 arg_obj);

  void (*stop_vehicle_status_updates) (
    Mediahub2Dbus *object,
    guint64 arg_obj);

  void (*unduck_audio) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    gdouble arg_durationms);

  void (*wifi_carplay_update) (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status_id);

};

GType mediahub2_dbus_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *mediahub2_dbus_interface_info (void);
guint mediahub2_dbus_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void mediahub2_dbus_complete_test_string (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *output);

void mediahub2_dbus_complete_core_register_events_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_core_register_devices_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_dev_register_detach_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_dev_attach_pb (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_register_events_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_dev_request_app_launch (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_core_start (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_core_stop (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_obj_get_properties (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *values,
    gint res);

void mediahub2_dbus_complete_obj_get_properties_type (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *type);

void mediahub2_dbus_complete_obj_get_property_type (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 type);

void mediahub2_dbus_complete_obj_ref (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 ret_obj);

void mediahub2_dbus_complete_obj_unref (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_obj_set_properties (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_obj_signal_connect (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_dev_write_ea_data (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint len);

void mediahub2_dbus_complete_folder_get_children (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint count,
    GVariant *items);

void mediahub2_dbus_complete_folder_create_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 playlist);

void mediahub2_dbus_complete_pb_play_by_list (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_play_radio_by_index (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_pb_next (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_previous (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_close (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_stop (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_play (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_pause (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_play_pause (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_pb_seek (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_forward (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_forward_done (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_backward (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_backward_done (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_create (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 obj);

void mediahub2_dbus_complete_pb_register_events_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_playlist_change (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_shm_unlink (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_item_foreach (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *data,
    gint res);

void mediahub2_dbus_complete_item_foreach_fd (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_item_foreach_shm (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *shm,
    guint size,
    gint res);

void mediahub2_dbus_complete_dev_start_scan (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_scan_abort (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_restore_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 playlist);

void mediahub2_dbus_complete_dev_get_playlist_info (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *playlist_info);

void mediahub2_dbus_complete_playlist_foreach (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *data,
    gint res);

void mediahub2_dbus_complete_playlist_foreach_shm (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    const gchar *shm,
    guint size,
    gint res);

void mediahub2_dbus_complete_playlist_sort (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_filter_create (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 filter);

void mediahub2_dbus_complete_dev_create_col (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 col);

void mediahub2_dbus_complete_folder_seek (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_register_status_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_resize (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_pixel_aspect_ratio (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_pb_audiobook_playback_speed (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_col_create (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 col);

void mediahub2_dbus_complete_col_retrieve_data (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint count,
    GVariant *data);

void mediahub2_dbus_complete_col_retrieve_album (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint count,
    GVariant *data);

void mediahub2_dbus_complete_col_create_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 playlist);

void mediahub2_dbus_complete_col_set_favorite (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_misc_set_filter (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_save_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_update_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_delete_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_get_radiolist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint count,
    GVariant *data);

void mediahub2_dbus_complete_misc_reset (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_misc_db_restore (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_misc_db_delete_by_serial_number (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_col_add_filter (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint result);

void mediahub2_dbus_complete_col_filter_clear (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint result);

void mediahub2_dbus_complete_col_set_retrieve_key (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint result);

void mediahub2_dbus_complete_col_set_order_type (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint result);

void mediahub2_dbus_complete_pb_get_track_info (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *track_info);

void mediahub2_dbus_complete_pb_get_subtitle_info (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *subtitle_info);

void mediahub2_dbus_complete_dev_get_item_by_uri (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 item);

void mediahub2_dbus_complete_dev_create_empty_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 playlist);

void mediahub2_dbus_complete_playlist_append (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_playlist_append_playlist (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_playlist_insert (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_playlist_remove (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_file_get_tag (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    GVariant *tag);

void mediahub2_dbus_complete_pb_set_pipeline_status (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_send_signal_touch (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_start (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_register_status_listener (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_add_file (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint64 item);

void mediahub2_dbus_complete_dev_detete_file (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    guint result);

void mediahub2_dbus_complete_misc_set_bluetoothids (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_write_location_data (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_dev_send_vehicle_status (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_misc_set_iap_device_mode (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_misc_save_pb (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_misc_carplay_init_modes (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_register_module_status (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_carlife_register_bt_hfp_request (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation);

void mediahub2_dbus_complete_core_find_dev (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_write_bt_data (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint len);

void mediahub2_dbus_complete_dev_send_wifi_conf_info (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_misc_set_righthand (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint res);

void mediahub2_dbus_complete_dev_search_name (
    Mediahub2Dbus *object,
    GDBusMethodInvocation *invocation,
    gint count,
    GVariant *items);



/* D-Bus signal emissions functions: */
void mediahub2_dbus_emit_core_events (
    Mediahub2Dbus *object,
    guint arg_event,
    const gchar *arg_type);

void mediahub2_dbus_emit_core_devices (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_event);

void mediahub2_dbus_emit_dev_detach (
    Mediahub2Dbus *object,
    guint64 arg_dev);

void mediahub2_dbus_emit_dev_event (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_scan_type,
    guint arg_item_type,
    guint64 arg_data,
    guint arg_percent);

void mediahub2_dbus_emit_request_ui (
    Mediahub2Dbus *object,
    guint64 arg_obj);

void mediahub2_dbus_emit_modes_changed (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    const gchar *arg_screen,
    const gchar *arg_main_audio,
    const gchar *arg_speech_entity,
    const gchar *arg_speech_mode,
    const gchar *arg_phone,
    const gchar *arg_turns);

void mediahub2_dbus_emit_disable_bluetooth (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    const gchar *arg_device_id);

void mediahub2_dbus_emit_ea_session_start (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_protocol_id,
    guint arg_session_id,
    guint arg_pb);

void mediahub2_dbus_emit_ea_session_stop (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_session_id);

void mediahub2_dbus_emit_ea_session_data (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    GVariant *arg_data);

void mediahub2_dbus_emit_ea_session_send_pb (
    Mediahub2Dbus *object,
    guint arg_obj,
    guint arg_pb);

void mediahub2_dbus_emit_pb_events (
    Mediahub2Dbus *object,
    guint64 arg_pb,
    guint arg_type,
    GVariant *arg_data);

void mediahub2_dbus_emit_status_update (
    Mediahub2Dbus *object,
    guint64 arg_pb,
    guint arg_type);

void mediahub2_dbus_emit_dev_status (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_status);

void mediahub2_dbus_emit_start_location_info (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_location_id);

void mediahub2_dbus_emit_stop_location_info (
    Mediahub2Dbus *object,
    guint64 arg_obj);

void mediahub2_dbus_emit_start_vehicle_status_updates (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status_id);

void mediahub2_dbus_emit_stop_vehicle_status_updates (
    Mediahub2Dbus *object,
    guint64 arg_obj);

void mediahub2_dbus_emit_dev_module_status (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_cnt,
    GVariant *arg_module_status_list);

void mediahub2_dbus_emit_duck_audio (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    gdouble arg_durationms,
    gdouble arg_volume);

void mediahub2_dbus_emit_unduck_audio (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    gdouble arg_durationms);

void mediahub2_dbus_emit_carlife_bt_hfp_request (
    Mediahub2Dbus *object,
    guint64 arg_dev,
    guint arg_request_type,
    const gchar *arg_phone_num,
    gint arg_dtmfcode);

void mediahub2_dbus_emit_bt_data (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    GVariant *arg_data);

void mediahub2_dbus_emit_req_accessory_wifi_conf_info (
    Mediahub2Dbus *object,
    guint64 arg_obj);

void mediahub2_dbus_emit_wifi_carplay_update (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status_id);

void mediahub2_dbus_emit_audio_info (
    Mediahub2Dbus *object,
    guint64 arg_obj,
    guint arg_status,
    guint arg_type,
    guint arg_rate,
    guint arg_channel);



/* D-Bus method calls: */
void mediahub2_dbus_call_test_string (
    Mediahub2Dbus *proxy,
    const gchar *arg_input,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_test_string_finish (
    Mediahub2Dbus *proxy,
    gchar **out_output,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_test_string_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_input,
    gchar **out_output,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_core_register_events_listener (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_core_register_events_listener_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_core_register_events_listener_sync (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_core_register_devices_listener (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_core_register_devices_listener_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_core_register_devices_listener_sync (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_register_detach_listener (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_register_detach_listener_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_register_detach_listener_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_attach_pb (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_pb,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_attach_pb_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_attach_pb_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_pb,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_register_events_listener (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_register_events_listener_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_register_events_listener_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_request_app_launch (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_app_bundle_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_request_app_launch_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_request_app_launch_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_app_bundle_id,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_core_start (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_core_start_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_core_start_sync (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_core_stop (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_core_stop_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_core_stop_sync (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_get_properties (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *const *arg_properties,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_get_properties_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_values,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_get_properties_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *const *arg_properties,
    GVariant **out_values,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_get_properties_type (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *const *arg_properties,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_get_properties_type_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_type,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_get_properties_type_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *const *arg_properties,
    GVariant **out_type,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_get_property_type (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_property,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_get_property_type_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_type,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_get_property_type_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_property,
    guint64 *out_type,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_ref (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_ref_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_ret_obj,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_ref_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 *out_ret_obj,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_unref (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_unref_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_unref_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_set_properties (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_properties,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_set_properties_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_set_properties_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_properties,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_obj_signal_connect (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_signal,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_obj_signal_connect_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_obj_signal_connect_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_signal,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_write_ea_data (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_write_ea_data_finish (
    Mediahub2Dbus *proxy,
    gint *out_len,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_write_ea_data_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_data,
    gint *out_len,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_folder_get_children (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_filter,
    guint arg_position,
    gint arg_count,
    guint arg_order,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_folder_get_children_finish (
    Mediahub2Dbus *proxy,
    gint *out_count,
    GVariant **out_items,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_folder_get_children_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_filter,
    guint arg_position,
    gint arg_count,
    guint arg_order,
    gint *out_count,
    GVariant **out_items,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_folder_create_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_filter,
    gboolean arg_recursive,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_folder_create_playlist_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_playlist,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_folder_create_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_filter,
    gboolean arg_recursive,
    guint64 *out_playlist,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_play_by_list (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_playlist,
    guint arg_index,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_play_by_list_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_play_by_list_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint64 arg_playlist,
    guint arg_index,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_play_radio_by_index (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_obj,
    guint arg_index,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_play_radio_by_index_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_play_radio_by_index_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_obj,
    guint arg_index,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_next (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_next_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_next_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_previous (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_previous_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_previous_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_close (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_close_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_close_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_stop (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_stop_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_stop_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_play (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_play_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_play_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_pause (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_pause_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_pause_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_play_pause (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_play_pause_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_play_pause_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_seek (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_second,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_seek_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_seek_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_second,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_forward (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_forward_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_forward_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_forward_done (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_forward_done_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_forward_done_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_backward (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_backward_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_backward_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_backward_done (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_backward_done_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_backward_done_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_create (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_create_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_obj,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_create_sync (
    Mediahub2Dbus *proxy,
    guint64 *out_obj,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_register_events_listener (
    Mediahub2Dbus *proxy,
    guint64 arg_self,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_register_events_listener_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_register_events_listener_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_self,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_playlist_change (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    guint64 arg_playlist,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_playlist_change_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_playlist_change_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    guint64 arg_playlist,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_shm_unlink (
    Mediahub2Dbus *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_shm_unlink_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_shm_unlink_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_name,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_item_foreach (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_item_foreach_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_data,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_item_foreach_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    GVariant **out_data,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_item_foreach_fd (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    GVariant *arg_fd,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_item_foreach_fd_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_item_foreach_fd_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    GVariant *arg_fd,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_item_foreach_shm (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_item_foreach_shm_finish (
    Mediahub2Dbus *proxy,
    gchar **out_shm,
    guint *out_size,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_item_foreach_shm_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_items,
    gchar **out_shm,
    guint *out_size,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_start_scan (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_type,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_start_scan_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_start_scan_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_type,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_scan_abort (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_scan_abort_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_scan_abort_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_restore_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint64 arg_playlist_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_restore_playlist_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_playlist,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_restore_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint64 arg_playlist_id,
    guint64 *out_playlist,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_get_playlist_info (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_get_playlist_info_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_playlist_info,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_get_playlist_info_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GVariant **out_playlist_info,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_foreach (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_foreach_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_data,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_foreach_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count,
    GVariant **out_data,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_foreach_shm (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_foreach_shm_finish (
    Mediahub2Dbus *proxy,
    gchar **out_shm,
    guint *out_size,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_foreach_shm_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    gint arg_start,
    gint arg_count,
    gchar **out_shm,
    guint *out_size,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_sort (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_sort_type,
    guint arg_order_type,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_sort_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_sort_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_sort_type,
    guint arg_order_type,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_filter_create (
    Mediahub2Dbus *proxy,
    const gchar *arg_filter_str,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_filter_create_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_filter,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_filter_create_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_filter_str,
    guint64 *out_filter,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_create_col (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_create_col_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_col,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_create_col_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 *out_col,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_folder_seek (
    Mediahub2Dbus *proxy,
    guint64 arg_folder,
    guint64 arg_filter,
    guint arg_pos,
    guint arg_order,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_folder_seek_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_folder_seek_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_folder,
    guint64 arg_filter,
    guint arg_pos,
    guint arg_order,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_register_status_listener (
    Mediahub2Dbus *proxy,
    guint64 arg_self,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_register_status_listener_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_register_status_listener_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_self,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_resize (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_offsetx,
    guint arg_offsety,
    guint arg_width,
    guint arg_height,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_resize_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_resize_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_offsetx,
    guint arg_offsety,
    guint arg_width,
    guint arg_height,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_pixel_aspect_ratio (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_pixel_n,
    guint arg_pixel_d,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_pixel_aspect_ratio_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_pixel_aspect_ratio_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_pixel_n,
    guint arg_pixel_d,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_audiobook_playback_speed (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_speed,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_audiobook_playback_speed_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_audiobook_playback_speed_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_speed,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_create (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_create_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_col,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_create_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 *out_col,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_retrieve_data (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_retrieve_data_finish (
    Mediahub2Dbus *proxy,
    gint *out_count,
    GVariant **out_data,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_retrieve_data_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy,
    gint *out_count,
    GVariant **out_data,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_retrieve_album (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_retrieve_album_finish (
    Mediahub2Dbus *proxy,
    gint *out_count,
    GVariant **out_data,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_retrieve_album_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gint arg_count,
    gboolean arg_fuzzy,
    gint *out_count,
    GVariant **out_data,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_create_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gboolean arg_fuzzy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_create_playlist_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_playlist,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_create_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_media_type,
    gboolean arg_fuzzy,
    guint64 *out_playlist,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_set_favorite (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_favorite,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_set_favorite_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_set_favorite_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint arg_favorite,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_set_filter (
    Mediahub2Dbus *proxy,
    GVariant *arg_type_filter,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_set_filter_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_set_filter_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_type_filter,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_save_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_save_playlist_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_save_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_update_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist,
    gint64 arg_playlist_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_update_playlist_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_update_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_name,
    guint64 arg_playlist,
    gint64 arg_playlist_id,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_delete_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint64 arg_playlist_id,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_delete_playlist_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_delete_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint64 arg_playlist_id,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_get_radiolist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_get_radiolist_finish (
    Mediahub2Dbus *proxy,
    gint *out_count,
    GVariant **out_data,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_get_radiolist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint arg_count,
    gint *out_count,
    GVariant **out_data,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_reset (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_reset_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_reset_sync (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_db_restore (
    Mediahub2Dbus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_db_restore_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_db_restore_sync (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_db_delete_by_serial_number (
    Mediahub2Dbus *proxy,
    const gchar *arg_serialNum,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_db_delete_by_serial_number_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_db_delete_by_serial_number_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_serialNum,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_add_filter (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    GVariant *arg_filter,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_add_filter_finish (
    Mediahub2Dbus *proxy,
    guint *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_add_filter_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    GVariant *arg_filter,
    guint *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_filter_clear (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_filter_clear_finish (
    Mediahub2Dbus *proxy,
    guint *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_filter_clear_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_set_retrieve_key (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_set_retrieve_key_finish (
    Mediahub2Dbus *proxy,
    guint *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_set_retrieve_key_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_col_set_order_type (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_col_set_order_type_finish (
    Mediahub2Dbus *proxy,
    guint *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_col_set_order_type_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_col,
    guint arg_type,
    guint *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_get_track_info (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_get_track_info_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_track_info,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_get_track_info_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    GVariant **out_track_info,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_get_subtitle_info (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_get_subtitle_info_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_subtitle_info,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_get_subtitle_info_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_pb,
    GVariant **out_subtitle_info,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_get_item_by_uri (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_uri,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_get_item_by_uri_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_item,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_get_item_by_uri_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    const gchar *arg_uri,
    guint64 *out_item,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_create_empty_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_create_empty_playlist_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_playlist,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_create_empty_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 *out_playlist,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_append (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    GVariant *arg_items,
    guint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_append_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_append_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    GVariant *arg_items,
    guint arg_count,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_append_playlist (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist_src,
    guint64 arg_playlist_des,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_append_playlist_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_append_playlist_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist_src,
    guint64 arg_playlist_des,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_insert (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_index,
    GVariant *arg_items,
    guint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_insert_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_insert_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_index,
    GVariant *arg_items,
    guint arg_count,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_playlist_remove (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_index,
    guint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_playlist_remove_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_playlist_remove_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_playlist,
    guint arg_index,
    guint arg_count,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_file_get_tag (
    Mediahub2Dbus *proxy,
    const gchar *arg_file_path,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_file_get_tag_finish (
    Mediahub2Dbus *proxy,
    GVariant **out_tag,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_file_get_tag_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_file_path,
    GVariant **out_tag,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_pb_set_pipeline_status (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_status,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_pb_set_pipeline_status_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_pb_set_pipeline_status_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_status,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_send_signal_touch (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint arg_press_type,
    guint arg_x,
    guint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_send_signal_touch_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_send_signal_touch_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint arg_press_type,
    guint arg_x,
    guint arg_y,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_start (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_start_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_start_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_register_status_listener (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_register_status_listener_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_register_status_listener_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_add_file (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_dest,
    guint64 arg_source,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_add_file_finish (
    Mediahub2Dbus *proxy,
    guint64 *out_item,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_add_file_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_dest,
    guint64 arg_source,
    guint64 *out_item,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_detete_file (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_item,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_detete_file_finish (
    Mediahub2Dbus *proxy,
    guint *out_result,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_detete_file_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint64 arg_item,
    guint *out_result,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_set_bluetoothids (
    Mediahub2Dbus *proxy,
    const gchar *arg_ids,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_set_bluetoothids_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_set_bluetoothids_sync (
    Mediahub2Dbus *proxy,
    const gchar *arg_ids,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_write_location_data (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_write_location_data_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_write_location_data_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    const gchar *arg_data,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_send_vehicle_status (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_remainingRange,
    gint arg_outsideTempreture,
    gint arg_rangeWarning,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_send_vehicle_status_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_send_vehicle_status_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    guint arg_remainingRange,
    gint arg_outsideTempreture,
    gint arg_rangeWarning,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_set_iap_device_mode (
    Mediahub2Dbus *proxy,
    guint arg_mode,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_set_iap_device_mode_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_set_iap_device_mode_sync (
    Mediahub2Dbus *proxy,
    guint arg_mode,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_save_pb (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_save_pb_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_save_pb_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_carplay_init_modes (
    Mediahub2Dbus *proxy,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_carplay_init_modes_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_carplay_init_modes_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_data,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_register_module_status (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_register_module_status_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_register_module_status_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_carlife_register_bt_hfp_request (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_carlife_register_bt_hfp_request_finish (
    Mediahub2Dbus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_carlife_register_bt_hfp_request_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_core_find_dev (
    Mediahub2Dbus *proxy,
    GVariant *arg_devParam,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_core_find_dev_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_core_find_dev_sync (
    Mediahub2Dbus *proxy,
    GVariant *arg_devParam,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_write_bt_data (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_data,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_write_bt_data_finish (
    Mediahub2Dbus *proxy,
    gint *out_len,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_write_bt_data_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_data,
    gint *out_len,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_send_wifi_conf_info (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_ssid,
    GVariant *arg_pass,
    guint arg_securityType,
    guint arg_channel,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_send_wifi_conf_info_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_send_wifi_conf_info_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_obj,
    GVariant *arg_ssid,
    GVariant *arg_pass,
    guint arg_securityType,
    guint arg_channel,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_misc_set_righthand (
    Mediahub2Dbus *proxy,
    guint arg_status,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_misc_set_righthand_finish (
    Mediahub2Dbus *proxy,
    gint *out_res,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_misc_set_righthand_sync (
    Mediahub2Dbus *proxy,
    guint arg_status,
    gint *out_res,
    GCancellable *cancellable,
    GError **error);

void mediahub2_dbus_call_dev_search_name (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint arg_type,
    const gchar *arg_string,
    gint arg_count,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mediahub2_dbus_call_dev_search_name_finish (
    Mediahub2Dbus *proxy,
    gint *out_count,
    GVariant **out_items,
    GAsyncResult *res,
    GError **error);

gboolean mediahub2_dbus_call_dev_search_name_sync (
    Mediahub2Dbus *proxy,
    guint64 arg_dev,
    guint arg_type,
    const gchar *arg_string,
    gint arg_count,
    gint *out_count,
    GVariant **out_items,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_MEDIAHUB2_DBUS_PROXY (mediahub2_dbus_proxy_get_type ())
#define MEDIAHUB2_DBUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_DBUS_PROXY, Mediahub2DbusProxy))
#define MEDIAHUB2_DBUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_MEDIAHUB2_DBUS_PROXY, Mediahub2DbusProxyClass))
#define MEDIAHUB2_DBUS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_MEDIAHUB2_DBUS_PROXY, Mediahub2DbusProxyClass))
#define IS_MEDIAHUB2_DBUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_DBUS_PROXY))
#define IS_MEDIAHUB2_DBUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_MEDIAHUB2_DBUS_PROXY))

typedef struct _Mediahub2DbusProxy Mediahub2DbusProxy;
typedef struct _Mediahub2DbusProxyClass Mediahub2DbusProxyClass;
typedef struct _Mediahub2DbusProxyPrivate Mediahub2DbusProxyPrivate;

struct _Mediahub2DbusProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  Mediahub2DbusProxyPrivate *priv;
};

struct _Mediahub2DbusProxyClass
{
  GDBusProxyClass parent_class;
};

GType mediahub2_dbus_proxy_get_type (void) G_GNUC_CONST;

void mediahub2_dbus_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mediahub2Dbus *mediahub2_dbus_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Mediahub2Dbus *mediahub2_dbus_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void mediahub2_dbus_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mediahub2Dbus *mediahub2_dbus_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Mediahub2Dbus *mediahub2_dbus_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_MEDIAHUB2_DBUS_SKELETON (mediahub2_dbus_skeleton_get_type ())
#define MEDIAHUB2_DBUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_MEDIAHUB2_DBUS_SKELETON, Mediahub2DbusSkeleton))
#define MEDIAHUB2_DBUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_MEDIAHUB2_DBUS_SKELETON, Mediahub2DbusSkeletonClass))
#define MEDIAHUB2_DBUS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_MEDIAHUB2_DBUS_SKELETON, Mediahub2DbusSkeletonClass))
#define IS_MEDIAHUB2_DBUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_MEDIAHUB2_DBUS_SKELETON))
#define IS_MEDIAHUB2_DBUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_MEDIAHUB2_DBUS_SKELETON))

typedef struct _Mediahub2DbusSkeleton Mediahub2DbusSkeleton;
typedef struct _Mediahub2DbusSkeletonClass Mediahub2DbusSkeletonClass;
typedef struct _Mediahub2DbusSkeletonPrivate Mediahub2DbusSkeletonPrivate;

struct _Mediahub2DbusSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  Mediahub2DbusSkeletonPrivate *priv;
};

struct _Mediahub2DbusSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType mediahub2_dbus_skeleton_get_type (void) G_GNUC_CONST;

Mediahub2Dbus *mediahub2_dbus_skeleton_new (void);


G_END_DECLS

#endif /* __MH_DBUS_X64_H__ */
